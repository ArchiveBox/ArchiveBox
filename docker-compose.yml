# Usage:
#     docker-compose run archivebox init --setup
#     docker-compose up
#     echo "https://example.com" | docker-compose run archivebox archivebox add
#     docker-compose run archivebox add --depth=1 https://example.com/some/feed.rss
#     docker-compose run archivebox config --set PUBLIC_INDEX=True
#     docker-compose run archivebox help
# Documentation:
#     https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#docker-compose

version: '3.9'   # '3.9' or greater also works

services:
    archivebox:
        build: .                              # for developers working on archivebox
        image: ${DOCKER_IMAGE:-matiaszanolli/archivebox:latest}
        restart: always
        command: server --quick-init 0.0.0.0:8000
        ports:
            - 8000:8000
        environment:
            - ALLOWED_HOSTS=*                   # add any config options you want as env vars
            - MEDIA_MAX_SIZE=750m
            - PG_HOST=host.docker.internal
            - PG_DATABASE=archivebox
            - PG_USERNAME=archivebox
            - PG_PASSWORD=archivebox
            # - SEARCH_BACKEND_ENGINE=sonic     # uncomment these if you enable sonic below
            # - SEARCH_BACKEND_HOST_NAME=sonic
            # - SEARCH_BACKEND_PASSWORD=SecretPassword
        volumes:
            - /mnt/archivebox-new:/data
            - ./archivebox:/archivebox    # for developers working on archivebox
        networks:
            - default
        extra_hosts:
          - "host.docker.internal:host-gateway"
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  count: 1
                  capabilities: [gpu]
    
    memcached:
        image: 'bitnami/memcached:latest'
        networks:
            - default
        # To run the Sonic full-text search backend, first download the config file to sonic.cfg
    # curl -O https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/master/etc/sonic.cfg
    # after starting, backfill any existing Snapshots into the index: docker-compose run archivebox update --index-only
    # sonic:
    #     image: valeriansaliou/sonic:v1.3.0
    #     expose:
    #         - 1491
    #     environment:
    #         - SEARCH_BACKEND_PASSWORD=SecretPassword
    #     volumes:
    #         - ./sonic.cfg:/etc/sonic.cfg:ro
    #         - ./data/sonic:/var/lib/sonic/store
    #     networks:
    #         - default

networks:
    default:
        driver: bridge
        ipam:
            config:
                 - subnet: 172.16.57.0/24

    ### Optional Addons: tweak these examples as needed for your specific use case

    # Example: Run scheduled imports in a docker instead of using cron on the
    # host machine, add tasks and see more info with archivebox schedule --help
#    scheduler:
#        image: archivebox/archivebox:latest
#        command: schedule --foreground --every=day --depth=1 'https://getpocket.com/users/USERNAME/feed/all'
#        environment:
#            - USE_COLOR=True
#            - SHOW_PROGRESS=False
#        volumes:
#            - ./data:/data

    # Example: Put Nginx in front of the ArchiveBox server for SSL termination
#    nginx:
#         image: nginx:alpine
#         ports:
#             - 443:443
#             - 80:80
#         volumes:
#             - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
#             - ./data:/mnt/archivebox

    # Example: run all your ArchiveBox traffic through a WireGuard VPN tunnel
    # wireguard:
    #   image: linuxserver/wireguard
    #   network_mode: 'service:archivebox'
    #   cap_add:
    #     - NET_ADMIN
    #     - SYS_MODULE
    #   sysctls:
    #     - net.ipv4.conf.all.rp_filter=2
    #     - net.ipv4.conf.all.src_valid_mark=1
    #   volumes:
    #     - /lib/modules:/lib/modules
    #     - ./wireguard.conf:/config/wg0.conf:ro

    # Example: Run PYWB in parallel and auto-import WARCs from ArchiveBox
    # pywb:
    #     image: webrecorder/pywb:latest
    #     entrypoint: /bin/sh 'wb-manager add default /archivebox/archive/*/warc/*.warc.gz; wayback --proxy;'
    #     environment:
    #         - INIT_COLLECTION=archivebox
    #     ports:
    #         - 8080:8080
    #     volumes:
    #         - ./data:/archivebox
    #         - ./data/wayback:/webarchive
