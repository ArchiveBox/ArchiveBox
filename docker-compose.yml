# Usage:
#     docker compose run archivebox init --setup
#     docker compose up
#     echo "https://example.com" | docker compose run archivebox archivebox add
#     docker compose run archivebox add --depth=1 https://example.com/some/feed.rss
#     docker compose run archivebox config --set MEDIA_MAX_SIZE=750m
#     docker compose run archivebox help
# Documentation:
#     https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#docker-compose

version: '3.9'

services:
  archivebox:
    image: archivebox/archivebox:sha-d0fefc02
    command: server --quick-init 0.0.0.0:8000
    ports:
      - 8000:8000
    volumes:
      - ./data:/data
      # Uncomment for automatic archiving:
      # - ./etc/crontabs:/var/spool/cron/crontabs
      # Uncomment to mount source code at runtime (for development):
      # - ./archivebox:/app/archivebox
    environment:
      - ALLOWED_HOSTS=*  # Set specific domain to restrict access
      # - PUBLIC_INDEX=True               # Set to False to hide snapshot list from anonymous users
      # - PUBLIC_SNAPSHOTS=True           # Set to False to hide snapshot content from anonymous users
      # - PUBLIC_ADD_VIEW=False           # Set to True to allow anonymous URL submissions
      # - ADMIN_USERNAME=admin            # Set admin username
      # - ADMIN_PASSWORD=SomeSecretPassword # Set admin password
      # - PUID=911                        # Set UID if permissions issues occur
      # - PGID=911                        # Set GID if permissions issues occur
      # - SEARCH_BACKEND_ENGINE=sonic     # Enable Sonic search backend
      # - SEARCH_BACKEND_HOST_NAME=sonic
      # - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
      # - MEDIA_MAX_SIZE=750m             # Increase to allow larger media files
      # - TIMEOUT=60                      # Increase to prevent timeouts on slow downloads
      # - CHECK_SSL_VALIDITY=True         # Set to False to bypass SSL checks
      # - SAVE_ARCHIVE_DOT_ORG=True       # Set to False to skip submission to Archive.org

  # Optional Services:
  # Sonic full-text search backend:
  # sonic:
  #   image: valeriansaliou/sonic:latest
  #   expose:
  #     - 1491
  #   environment:
  #     - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
  #   volumes:
  #     - ./sonic.cfg:/etc/sonic.cfg:ro
  #     - ./data/sonic:/var/lib/sonic/store

  # Pi-hole for ad-blocking during archiving:
  # pihole:
  #   image: pihole/pihole:latest
  #   ports:
  #     - 127.0.0.1:8090:80  # Access the admin interface at http://localhost:8090
  #   environment:
  #     - WEBPASSWORD=SET_THIS_TO_SOME_SECRET_PASSWORD_FOR_ADMIN_DASHBOARD
  #     - DNSMASQ_LISTENING=all
  #   dns:
  #     - 127.0.0.1
  #     - 1.1.1.1
  #   networks:
  #     dns:
  #       ipv4_address: 172.20.0.53
  #   volumes:
  #     - ./etc/pihole:/etc/pihole
  #     - ./etc/dnsmasq:/etc/dnsmasq.d

  # Scheduler for regular archiving tasks:
  # archivebox_scheduler:
  #   image: ${DOCKER_IMAGE:-archivebox/archivebox:dev}
  #   command: schedule --foreground
  #   environment:
  #     - MEDIA_MAX_SIZE=750m  # Allow larger media files
  #     # - TIMEOUT=60  # Increase if timeouts are frequent
  #     # - ONLY_NEW=True  # Set to False to retry failed URLs
  #     # - CHECK_SSL_VALIDITY=True  # Set to False to bypass SSL checks
  #     # - SAVE_ARCHIVE_DOT_ORG=True  # Set to False to skip submission to Archive.org
  #     # - PUID=502  # Set UID if permissions issues occur
  #     # - PGID=20   # Set GID if permissions issues occur
  #   volumes:
  #     - ./data:/data
  #     - ./etc/crontabs:/var/spool/cron/crontabs
  #   # Uncomment to limit resources:
  #   # cpus: 2
  #   # mem_limit: 2048m
  #   # shm_size: 1024m

  # Nginx for SSL termination:
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - 443:443
  #     - 80:80
  #   volumes:
  #     - ./etc/nginx.conf:/etc/nginx/nginx.conf
  #     - ./data:/var/www

  # WireGuard VPN for ArchiveBox traffic:
  # wireguard:
  #   image: linuxserver/wireguard:latest
  #   network_mode: 'service:archivebox'
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   sysctls:
  #     - net.ipv4.conf.all.rp_filter=2
  #     - net.ipv4.conf.all.src_valid_mark=1
  #   volumes:
  #     - /lib/modules:/lib/modules
  #     - ./wireguard.conf:/config/wg0.conf:ro

  # PYWB for replaying WARCs alongside ArchiveBox:
  # pywb:
  #   image: webrecorder/pywb:latest
  #   entrypoint: /bin/sh -c '(wb-manager init default || test $$? -eq 2) && wb-manager add default /archivebox/archive/*/warc/*.warc.gz; wayback;'
  #   environment:
  #     - INIT_COLLECTION=archivebox
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./data:/archivebox
  #     - ./data/wayback:/webarchive

networks:
  # Required for Pi-hole DNS resolving:
  dns:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
